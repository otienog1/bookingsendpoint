# Example Environment Configuration for Bookings Documents System

# Flask Configuration
FLASK_ENV=development
SECRET_KEY=your-secret-key-change-in-production

# Database Configuration
MONGO_URI=mongodb://localhost:27017/bookings_db
MONGO_DBNAME=bookings_db

# JWT Configuration
ACCESS_TOKEN_DURATION=86400
REFRESH_TOKEN_DURATION=604800
REMEMBER_ACCESS_TOKEN_DURATION=604800
REMEMBER_REFRESH_TOKEN_DURATION=2592000

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com
CORS_ALLOW_CREDENTIALS=true

# Copyparty Configuration (Primary Storage)
COPYPARTY_BASE_URL=http://localhost:3923
# In production, set this to your Copyparty server URL:
# COPYPARTY_BASE_URL=https://your-copyparty-server.com
COPYPARTY_API_TOKEN=your-copyparty-api-token-here
COPYPARTY_UPLOAD_PASSWORD=bookingupload123
COPYPARTY_FOLDER_PREFIX=bookings

# Google Cloud Storage Configuration (Fallback Storage)
GCS_BUCKET_NAME=bks_file_upload_bucket
GCS_FOLDER_PREFIX=copyparty
GCS_PROJECT_ID=your-gcp-project-id
# Option 1: Use service account key file path
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
# Option 2: Use service account key JSON content (for environments like Heroku)
# GCS_CREDENTIALS_JSON={"type":"service_account","project_id":"...","private_key_id":"..."}
# Option 3: Use default credentials (for Google Cloud environments - no additional config needed)

# Share Token Configuration
SHARE_TOKEN_SECRET=your-secure-random-string-for-jwt-signing-change-in-production
SHARE_EXPIRES_DEFAULT=604800

# Email Configuration (Optional)
SMTP_SERVER=localhost
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
FROM_EMAIL=noreply@yourdomain.com
FRONTEND_URL=http://localhost:3000
# In production, set this to your actual domain:
# FRONTEND_URL=https://maniagobookings.vercel.app

# Redis Configuration (Optional for token blacklisting)
REDIS_URL=
ENABLE_TOKEN_BLACKLIST=false